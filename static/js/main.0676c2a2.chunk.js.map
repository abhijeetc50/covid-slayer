{"version":3,"sources":["pages/login/index.js","components/logout/index.js","components/gamehistory/index.js","components/topgamers/index.js","pages/dashboard/index.js","pages/register/index.js","components/modal/index.js","components/commentarybox/index.js","pages/battlefield/index.js","pages/404/index.js","App.js","index.js"],"names":["md5","require","Login","alert","useAlert","history","useHistory","domain","process","REACT_APP_API_URL","span","offset","name","className","initialValues","remember","onFinish","values","formData","FormData","append","username","password","axios","post","then","response","status","data","localStorage","setItem","user_id","success","push","error","console","log","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","size","htmlType","block","ghost","onClick","Logout","justify","danger","removeItem","Title","Typography","Gamehistorydata","useState","gameHistory","setGameHistory","playerGameColumns","title","dataIndex","key","render","STATUS","color","text","record","fetchUserGames","useCallback","a","getItem","useEffect","level","columns","dataSource","Topgamers","topGainer","setTopGainers","topLosers","setTopLosers","topGainerLosersColumns","fetchTopGainerLoser","GAINERS","LOSERS","Dashboard","userGameWon","setUserGameWon","userGameLost","setUserGameLost","fetchUserGameCount","WON","LOST","generateBattlefieldID","Math","random","toString","substr","battleFieldID","bordered","Option","Select","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","Register","Form","useForm","form","email","age","gender","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","style","width","ModalPopup","content","visible","closable","footer","Commentarybox","commentary","renderItem","item","Battlefield","match","params","id","playerhealth","setPlayerhealth","covidMonsterHealth","setCovidMonsterHealth","winner","setWinner","setCommentary","winnerModal","setWinnerModal","attackCovidMonster","attackMonster","attackPlayer","randomAttackNumber","logGame","updatedCommentary","covidMonsterHealthTemp","playerhealthTemp","checkForWinner","min","max","floor","newMonsterHealth","newPlayerHealth","logGameWinner","winnerPlayer","point","playertype","strokeColor","percent","background","borderColor","healPlayer","PageNotFound","src","Header","Layout","Footer","Content","App","theme","mode","exact","path","component","textAlign","options","position","positions","TOP_RIGHT","timeout","transition","transitions","SCALE","ReactDOM","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.0676c2a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Input, Button, Row, Col, Divider } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './style.css';\r\nimport axios from 'axios';\r\nimport { useAlert } from 'react-alert';\r\n\r\nvar md5 = require('md5');\r\nconst Login = () => {\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n    const domain = process.env.REACT_APP_API_URL;\r\n\r\n    const onFinish = (values) => {\r\n        const formData = new FormData();\r\n        formData.append('username', values.username ? values.username : '');\r\n        formData.append('password', values.password ? md5(values.password) : '');\r\n\r\n        axios.post(domain + 'v1/login', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    if (response.data.status === 'true') {\r\n                        localStorage.setItem(\"name\", response.data.name);\r\n                        localStorage.setItem(\"user_id\", response.data.user_id);\r\n                        alert.success('Welcome, ' + response.data.name)\r\n                        history.push('dashboard/');\r\n                    }else{\r\n                        alert.error('Sorry, the credentials dont match. Please try again.')\r\n                    }\r\n                } else {\r\n                    alert.error('Something went wrong! Please try again.')\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n\r\n    };\r\n\r\n    const gotoRegister = () => {\r\n        history.push('/register');\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={6} offset={9}>\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" size=\"large\" htmlType=\"submit\" block className=\"login-form-button\">\r\n                            Log in\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <Divider>OR</Divider>\r\n                <Button type=\"primary\" ghost block size=\"large\" onClick={gotoRegister}>\r\n                    Register\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user_id');\r\n        localStorage.removeItem('name');\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <Row justify=\"end\">\r\n            <Col span={2} offset={11}>\r\n                <Button type=\"primary\" danger  onClick={logout}>\r\n                    Logout\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n};\r\n\r\nexport default Logout;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Row, Col, Table, Tag, Typography, Space } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Gamehistorydata = () => {\r\n    const [gameHistory, setGameHistory] = useState([]);\r\n    const domain = process.env.REACT_APP_API_URL;\r\n\r\n\r\n    const playerGameColumns = [\r\n        {\r\n            title: 'Game ID',\r\n            dataIndex: 'GAME_ID',\r\n            key: 'GAME_ID',\r\n        },\r\n        {\r\n            title: 'STATUS',\r\n            key: 'STATUS',\r\n            dataIndex: 'STATUS',\r\n            render: STATUS => (\r\n                <>{STATUS === 'WON' ?\r\n                    <Tag color=\"green\" key={STATUS}>\r\n                        {STATUS}\r\n                    </Tag>\r\n                    :\r\n                    <Tag color=\"volcano\" key={STATUS}>\r\n                        {STATUS}\r\n                    </Tag>\r\n                }\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'DATE',\r\n            key: 'DATE',\r\n        }, {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <div>Check Game Log</div>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const fetchUserGames = useCallback(async () => {\r\n        const formData = new FormData();\r\n        formData.append('id', localStorage.getItem(\"user_id\"));\r\n\r\n        axios.post(domain + 'v1/getUserGameLog', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    setGameHistory(response.data)\r\n                } else {\r\n                    console.log(\"failed\");\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n    }, [domain]);\r\n\r\n    useEffect(() => {\r\n        fetchUserGames();\r\n    }, [fetchUserGames]);\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={16} >\r\n                <Title level={2}>Your Game History</Title>\r\n                <Table columns={playerGameColumns} dataSource={gameHistory} size=\"small\" />\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n};\r\n\r\nexport default Gamehistorydata;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Row, Col, Table, Typography } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Topgamers = () => {\r\n    const [topGainer, setTopGainers] = useState([]);\r\n    const [topLosers, setTopLosers] = useState([]);\r\n    const domain = process.env.REACT_APP_API_URL;\r\n\r\n    const topGainerLosersColumns = [\r\n        {\r\n            title: 'NAME',\r\n            dataIndex: 'NAME',\r\n            key: 'NAME',\r\n        }, {\r\n            title: 'PLAYER ID',\r\n            dataIndex: 'USER_ID',\r\n            key: 'USER_ID',\r\n        },\r\n        {\r\n            title: 'COUNT',\r\n            dataIndex: 'COUNT',\r\n            key: 'COUNT',\r\n        },\r\n    ];\r\n\r\n    const fetchTopGainerLoser = useCallback(async () => {\r\n        const formData = new FormData();\r\n        formData.append('id', localStorage.getItem(\"user_id\"));\r\n\r\n        axios.post(domain + 'v1/getTopGainerandLosers', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    setTopGainers(response.data.GAINERS);\r\n                    setTopLosers(response.data.LOSERS);\r\n                } else {\r\n                    console.log(\"failed\");\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n    }, [domain]);\r\n\r\n    useEffect(() => {\r\n        fetchTopGainerLoser();\r\n    }, [fetchTopGainerLoser]);\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={11}>\r\n                <Title level={2}>Top Players</Title>\r\n                <Table columns={topGainerLosersColumns} dataSource={topGainer} size=\"small\" />\r\n            </Col>\r\n            <Col span={11} offset={1}>\r\n                <Title level={2}>Top Losers</Title>\r\n                <Table columns={topGainerLosersColumns} dataSource={topLosers} size=\"small\" />\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n};\r\n\r\nexport default Topgamers;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Row, Col, Button,  Tag, Typography, Card } from 'antd';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport Logout from './../../components/logout';\r\nimport Gamehistorydata from './../../components/gamehistory';\r\nimport Topgamers from './../../components/topgamers';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Dashboard = () => {\r\n    const [userGameWon, setUserGameWon] = useState(0);\r\n    const [userGameLost, setUserGameLost] = useState(0);\r\n    const history = useHistory();\r\n    const domain = process.env.REACT_APP_API_URL;\r\n    var name = localStorage.getItem(\"name\");\r\n    if (localStorage.getItem(\"user_id\") == null) {\r\n        history.push('/login');\r\n        console.log(localStorage.getItem(\"user_id\"))\r\n    }\r\n\r\n    const fetchUserGameCount = useCallback(async () => {\r\n        const formData = new FormData();\r\n        formData.append('id', localStorage.getItem(\"user_id\"));\r\n\r\n        axios.post(domain + 'v1/getUserGameCount', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    setUserGameWon(response.data.WON[0].WON)\r\n                    setUserGameLost(response.data.LOST[0].LOST)\r\n                } else {\r\n                    console.log(\"failed\");\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n    }, [domain]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUserGameCount();\r\n    }, [fetchUserGameCount]);\r\n\r\n\r\n    const newGame = () => {\r\n        var battleFieldID = generateBattlefieldID()\r\n        const formData = new FormData();\r\n        formData.append('game_id', battleFieldID);\r\n        formData.append('user_id', localStorage.getItem(\"user_id\"));\r\n\r\n        axios.post(domain + 'v1/registerGame', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    if (response.data.status === 'true') {\r\n                        history.push('../battlefield/' + battleFieldID);\r\n                    }\r\n                } else {\r\n                    console.log(\"failed\");\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n\r\n    }\r\n\r\n    const generateBattlefieldID = () => {\r\n        return Math.random().toString(20).substr(2, 6)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Logout />\r\n            <Row>\r\n                <Col span={18} offset={3}>\r\n                    <Button type=\"primary\" onClick={newGame}>\r\n                        New Game\r\n                    </Button>\r\n                    <br />\r\n                    <br />\r\n                    <Title level={1}>Welcome, {name}</Title>\r\n                    <br />\r\n                    <br />\r\n                    <Row className=\"textCenter\">\r\n                        <Col span={11}>\r\n                            <Card title=\"Games Won\" bordered={false}>\r\n                                <Tag color=\"green\">\r\n                                    <Title level={2}>{userGameWon}</Title>\r\n                                </Tag>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                            <Card title=\"Games Lost\" bordered={false}>\r\n                                <Tag color=\"volcano\">\r\n                                    <Title level={2}>{userGameLost}</Title>\r\n                                </Tag>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <br />\r\n                    <Gamehistorydata />\r\n                    <Topgamers />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './style.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Typography\r\n} from 'antd';\r\nimport { useAlert } from 'react-alert';\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst { Title } = Typography;\r\nvar md5 = require('md5');\r\n\r\nconst Register = () => {\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n    const [form] = Form.useForm();\r\n    const domain = process.env.REACT_APP_API_URL;\r\n\r\n    const onFinish = (values) => {\r\n        const formData = new FormData();\r\n        formData.append('name', values.name ? values.name : '');\r\n        formData.append('email', values.email ? values.email : '');\r\n        formData.append('age', values.age ? values.age : '');\r\n        formData.append('gender', values.gender ? values.gender : '');\r\n        formData.append('password', values.password ? md5(values.password) : '');\r\n\r\n        axios.post(domain + 'v1/register', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    history.push('/login');\r\n                    alert.success('Registration Done. Login to Continue!')\r\n                } else {\r\n                    console.log(\"failed\");\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={8} offset={8}>\r\n                <Title level={1} className=\"textCenter\">Registration</Title>\r\n                <Form\r\n                    {...formItemLayout}\r\n                    form={form}\r\n                    name=\"register\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label=\"Full Name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Name!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your E-mail!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirm Password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please select gender!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select placeholder=\"select your gender\">\r\n                            <Option value=\"male\">Male</Option>\r\n                            <Option value=\"female\">Female</Option>\r\n                            <Option value=\"other\">Other</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"age\"\r\n                        label=\"Age\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input Age!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <InputNumber\r\n                            style={{\r\n                                width: '100%',\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nconst ModalPopup = ({ title, content, visible }) => {\r\n\r\n    return (\r\n        <Modal title={title} visible={visible} closable={false} footer={null}>\r\n            <p>{content}</p>\r\n        </Modal>\r\n    );\r\n\r\n};\r\n\r\nexport default ModalPopup;","import React from 'react';\r\nimport { Typography, List } from 'antd';\r\nimport './style.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Commentarybox = ({ commentary }) => {\r\n    return (\r\n        <>\r\n            <Title level={2}>Commentary Box</Title>\r\n            <List\r\n                className=\"scrollableList\"\r\n                size=\"small\"\r\n                bordered\r\n                dataSource={commentary}\r\n                renderItem={item => <List.Item>{item}</List.Item>}\r\n            />\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default Commentarybox;","import React, { useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Row, Col, Progress, Button } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport './style.css';\r\nimport axios from 'axios';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport ModalPopup from './../../components/modal';\r\nimport Logout from './../../components/logout';\r\nimport Commentarybox from './../../components/commentarybox';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Battlefield = (match) => {\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n    const domain = process.env.REACT_APP_API_URL;\r\n    const battleFieldID = match.match.params.id\r\n    const [playerhealth, setPlayerhealth] = useState(100);\r\n    const [covidMonsterHealth, setCovidMonsterHealth] = useState(100);\r\n    const [winner, setWinner] = useState('');\r\n    const [commentary, setCommentary] = useState([]);\r\n    const [winnerModal, setWinnerModal] = useState(false);\r\n\r\n    const attackCovidMonster = (type) => {\r\n        var attackMonster = '';\r\n        var attackPlayer = '';\r\n        if (type === 'attack') {\r\n            attackMonster = randomAttackNumber(1, 10);\r\n            attackPlayer = randomAttackNumber(1, 10);\r\n            logGame(-attackMonster, 'player', 'attack');\r\n            logGame(-attackPlayer, 'monster', 'attack');\r\n        } else {\r\n            attackMonster = randomAttackNumber(10, 20);\r\n            attackPlayer = randomAttackNumber(10, 20);\r\n            logGame(-attackMonster, 'player', 'blast');\r\n            logGame(-attackPlayer, 'monster', 'blast');\r\n        }\r\n\r\n        var updatedCommentary = [...commentary, \"Monster \" + type + \" the player by \" + attackPlayer];\r\n        setCommentary(updatedCommentary);\r\n        updatedCommentary = [...updatedCommentary, \"Player \" + type + \" the monster by \" + attackMonster];\r\n        setCommentary(updatedCommentary);\r\n\r\n        var covidMonsterHealthTemp = covidMonsterHealth;\r\n        var playerhealthTemp = playerhealth;\r\n\r\n        setCovidMonsterHealth(covidMonsterHealthTemp - attackMonster);\r\n        setPlayerhealth(playerhealthTemp - attackPlayer);\r\n        checkForWinner(covidMonsterHealthTemp - attackMonster, playerhealthTemp - attackPlayer);\r\n    }\r\n\r\n    const healCovidMonster = () => {\r\n        var attackPlayer = randomAttackNumber(1, 10);\r\n        var healPlayer = randomAttackNumber(10, 20);\r\n        logGame(healPlayer, 'player', 'heal');\r\n        logGame(-attackPlayer, 'monster', 'attack');\r\n\r\n        var updatedCommentary = [...commentary, \"Monster attacks the player by \" + attackPlayer];\r\n        setCommentary(updatedCommentary);\r\n        updatedCommentary = [...updatedCommentary, \"Player heals by \" + healPlayer];\r\n        setCommentary(updatedCommentary);\r\n\r\n        var covidMonsterHealthTemp = covidMonsterHealth;\r\n        var playerhealthTemp = playerhealth;\r\n        playerhealthTemp = playerhealthTemp + healPlayer;\r\n        playerhealthTemp = playerhealthTemp - attackPlayer\r\n\r\n        setPlayerhealth(playerhealthTemp);\r\n\r\n        checkForWinner(covidMonsterHealthTemp, playerhealthTemp);\r\n    }\r\n\r\n    const giveUp = () => {\r\n        logGameWinner('Monster');\r\n        history.push('../dashboard/');\r\n    }\r\n\r\n    const randomAttackNumber = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    const checkForWinner = (newMonsterHealth, newPlayerHealth) => {\r\n\r\n        if (newMonsterHealth <= 0) {\r\n            setWinner('Player');\r\n            setWinnerModal(true)\r\n            logGameWinner('Player');\r\n            alert.success('Player Won!')\r\n            history.push('../dashboard/');\r\n        } else if (newPlayerHealth <= 0) {\r\n            setWinner('Monster');\r\n            setWinnerModal(true)\r\n            logGameWinner('Monster');\r\n            alert.error('Monster Won! You Lost')\r\n            history.push('../dashboard/');\r\n        }\r\n    }\r\n\r\n    const logGameWinner = (winnerPlayer) => {\r\n\r\n        const formData = new FormData();\r\n        formData.append('game_id', battleFieldID);\r\n        formData.append('winner', winnerPlayer);\r\n\r\n        axios.post(domain + 'v1/logGameWinner', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    if (response.data.status === 'true') {\r\n\r\n                    }\r\n                } else {\r\n                    console.log(\"failed\");\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    const logGame = (point, playertype, type) => {\r\n\r\n        const formData = new FormData();\r\n        formData.append('game_id', battleFieldID);\r\n        formData.append('point', point);\r\n        formData.append('playertype', playertype);\r\n        formData.append('type', type);\r\n\r\n        axios.post(domain + 'v1/logGame', formData)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    if (response.data.status === 'true') {\r\n\r\n                    }\r\n                } else {\r\n                    console.log(\"failed\");\r\n                }\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ModalPopup title=\"Winner Winner Chicken Dinner\" content={winner} visible={winnerModal} />\r\n            <Logout />\r\n            <Row>\r\n                <Col span={12} offset={3}>\r\n                    <Row className=\"battleField\">\r\n                        <Col span={20} offset={2}>\r\n                            <Title level={2}>I am a timer</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"battleField\">\r\n                        <Col span={12}>\r\n                            <Title level={2}>You</Title>\r\n                            <Progress\r\n                                type=\"circle\"\r\n                                strokeColor={{\r\n                                    '0%': '#ED2938',\r\n                                    '20%': '#ED2938',\r\n                                    '40%': '#B25F4A',\r\n                                    '60%': '#77945C',\r\n                                    '80%': '#3BCA6D',\r\n                                    '100%': '#00FF7F',\r\n                                }}\r\n                                percent={playerhealth}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Title level={2}>Covid Monster</Title>\r\n                            <Progress\r\n                                type=\"circle\"\r\n                                strokeColor={{\r\n                                    '0%': '#ED2938',\r\n                                    '20%': '#ED2938',\r\n                                    '40%': '#B25F4A',\r\n                                    '60%': '#77945C',\r\n                                    '80%': '#3BCA6D',\r\n                                    '100%': '#00FF7F',\r\n                                }}\r\n                                percent={covidMonsterHealth}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={4} offset={2}>\r\n                            <Button type=\"danger\" block size=\"large\" onClick={() => attackCovidMonster('attack')}>\r\n                                Attack\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={4} offset={2}>\r\n                            <Button type=\"danger\" block size=\"large\" onClick={() => attackCovidMonster('blast')}>\r\n                                Blast\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={4} offset={2}>\r\n                            <Button type=\"success\"\r\n                                style={{ background: \"#00cc00\", borderColor: \"#00cc00\", color: \"#fff\" }}\r\n                                block size=\"large\" onClick={healCovidMonster}>\r\n                                Heal\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={4} offset={2}>\r\n                            <Button type=\"primary\" block size=\"large\" onClick={giveUp}>\r\n                                Give Up!\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={6} offset={1}>\r\n                    <Commentarybox commentary={commentary}/>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default Battlefield;","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div id=\"wrapper\">\r\n            <img src=\"https://i.imgur.com/qIufhof.png\" />\r\n            <div id=\"info\">\r\n                <h3>This page could not be found</h3>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PageNotFound","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport 'antd/dist/antd.css';\nimport { Layout, Menu } from 'antd';\n\nimport Login from './pages/login';\nimport Dashboard from './pages/dashboard';\nimport Register from './pages/register';\nimport Battlefield from './pages/battlefield';\nimport PageNotFound from './pages/404';\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  return (\n    <Layout>\n      <Header className=\"mainHeader\">\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item>Covid Slayer</Menu.Item>\n        </Menu>\n      </Header>\n      <Content>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/battlefield/:id' component={Battlefield} />\n\n            <Route component={PageNotFound} />\n          </Switch>\n        </Router>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Covid Slayer 2020.</Footer>\n    </Layout>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_RIGHT,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}